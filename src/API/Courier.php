<?php
/*
 * This code was auto generated by AfterShip SDK Generator.
 * Do not edit the class manually.
 */
namespace Tracking\API;

use Tracking\API\Base\APIBase;
use Tracking\Exception\AfterShipError;
use Tracking\Exception\ErrorCode;
use Tracking\Transport\Http;

class Courier extends APIBase
{
    private $httpClient;

    public function __construct(Http $httpClient)
    {
        $this->httpClient = $httpClient;
    }

    /**
    * @throws AfterShipError
    */
    public function getUserCouriers(
        array $headers = []
    ): \Tracking\API\Courier\GetUserCouriersResponse {
        $options = [
            'headers' => $headers,
        ];
        $resp = $this->httpClient->request('GET', sprintf("/tracking/2024-04/couriers"), $options);
        $result = $this->parseSingleResource($resp, '', \Tracking\API\Courier\GetUserCouriersResponse::class);
        return $result;
    }
    /**
    * @throws AfterShipError
    */
    public function getAllCouriers(
        array $headers = []
    ): \Tracking\API\Courier\GetAllCouriersResponse {
        $options = [
            'headers' => $headers,
        ];
        $resp = $this->httpClient->request('GET', sprintf("/tracking/2024-04/couriers/all"), $options);
        $result = $this->parseSingleResource($resp, '', \Tracking\API\Courier\GetAllCouriersResponse::class);
        return $result;
    }
    /**
    * @throws AfterShipError
    */
    public function detectCourier(
        \Tracking\API\Courier\TrackingDetectCourierRequest $body,
        array $headers = []
    ): \Tracking\API\Courier\DetectCourierResponse {
        $options = [
            'headers' => $headers,

            'json' => ['tracking' => $body->toRequestArray()],
        ];
        $resp = $this->httpClient->request('POST', sprintf("/tracking/2024-04/couriers/detect"), $options);
        $result = $this->parseSingleResource($resp, '', \Tracking\API\Courier\DetectCourierResponse::class);
        return $result;
    }
}
